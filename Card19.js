/**********************************************************************
*
*   Component generated by Quest
*
*   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts. 
*   To preseve that abilty, always export from Quest to regenerate this file.
*   To setup props, bindings and actions, use the Quest editor
*   Code Logic goes in the hook associated with this component
*
*   For help and further details refer to: https://www.quest.ai/docs
*
*
**********************************************************************/

import { Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import ImageImage from './assets/images/Image_1.png';

 
const TypeQuest = styled("div")(({ theme }) =>({  
  backgroundColor: `rgba(250, 250, 250, 1)`,  
  boxShadow: `0px 4px 8px rgba(0, 0, 0, 0.16)`,  
  borderRadius: `8px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  width: `390px`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  overflow: `hidden`,  
}));
  
const ImageFrame = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `10px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Image = styled("div")({  
  backgroundImage: `url(${ImageImage})`,  
  backgroundPosition: `center`,  
  backgroundSize: `cover`,  
  backgroundRepeat: `no-repeat`,  
  borderRadius: `6px`,  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  alignSelf: `stretch`,  
  height: `251px`,  
  margin: `0px`,  
});
  
const Content = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `10px 20px 35px 20px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Details = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `column`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const TitleTop = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `space-between`,  
  alignItems: `center`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  alignSelf: `stretch`,  
  margin: `0px`,  
});
  
const Title = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 0.87)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `700`,  
  fontSize: `38px`,  
  letterSpacing: `0px`,  
  textDecoration: `underline`,  
  textTransform: `none`,  
}));
  
const Q3Dots = styled("div")({  
  display: `flex`,  
  position: `relative`,  
  isolation: `isolate`,  
  flexDirection: `row`,  
  justifyContent: `flex-start`,  
  alignItems: `flex-start`,  
  padding: `0px`,  
  boxSizing: `border-box`,  
  width: `4px`,  
  height: `20px`,  
});
  
const Rectangle1 = styled("div")(({ theme }) =>({  
  backgroundColor: `rgba(0, 0, 0, 0.87)`,  
  borderRadius: `10px`,  
  width: `4px`,  
  height: `4px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `0px`,  
}));
  
const Rectangle2 = styled("div")(({ theme }) =>({  
  backgroundColor: `rgba(0, 0, 0, 0.87)`,  
  borderRadius: `10px`,  
  width: `4px`,  
  height: `4px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `8px`,  
}));
  
const Rectangle3 = styled("div")(({ theme }) =>({  
  backgroundColor: `rgba(0, 0, 0, 0.87)`,  
  borderRadius: `10px`,  
  width: `4px`,  
  height: `4px`,  
  position: `absolute`,  
  left: `0px`,  
  top: `16px`,  
}));
  
const Details1 = styled("div")(({ theme }) =>({  
  textAlign: `left`,  
  whiteSpace: `pre-wrap`,  
  color: `rgba(0, 0, 0, 0.87)`,  
  fontStyle: `normal`,  
  fontFamily: `Heebo`,  
  fontWeight: `400`,  
  fontSize: `16px`,  
  letterSpacing: `0.15000000596046448px`,  
  textDecoration: `none`,  
  lineHeight: `150%`,  
  textTransform: `none`,  
  alignSelf: `stretch`,  
  margin: `8px 0px 0px 0px`,  
}));
  
const ButtonContained = styled(Button)({  
  margin: `8px 0px 0px 0px`,  
});
 
function Card19() {
  return (
    <TypeQuest >
       <ImageFrame >
         <Image >
         </Image>
       </ImageFrame>
       <Content >
         <Details >
           <TitleTop >
             <Title >
               {`Lorem Ipsum`}
                 </Title>
             <Q3Dots >
               <Rectangle1 >
               </Rectangle1>
               <Rectangle2 >
               </Rectangle2>
               <Rectangle3 >
               </Rectangle3>
             </Q3Dots>
           </TitleTop>
           <Details1 >
             {`Lorem ipsum test to be seen and not read for placement only. Lorem ipsum test to be seen.`}
               </Details1>
           <ButtonContained variant="contained" size="large" color="primary"    > BOOK ME </ButtonContained>
         </Details>
       </Content>
     </TypeQuest>
   );
}

export default Card19;
